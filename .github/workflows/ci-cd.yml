name: CI/CD Pipeline

on:
  push:
    branches:
      - main  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  

    steps:
      # Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Setting up Python
      - name: Setting up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Installing dependencies
      - name: Installing dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      # Run tests
      - name: Running tests
        run: |
          python -m pytest  # Add your test command here

      # Docker Hub login
      - name: Logging in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}


       # Authenticating with Google Cloud
      - name: Authenticating with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}


      # Configuring GCloud SDK
      - name: Setting up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1


      # Configuring Docker to use GCR
      - name: Configuring Docker for GCR
        run: |
          gcloud auth configure-docker



      # Building and pushing Docker images to GCR and Docker Hub
      - name: Building and pushing Docker images
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/ci-cd_pipeline:latest .
          docker tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/ci-cd_pipeline:latest kal5257/ci-cd_pipeline:latest
          
          # Pushing to GCR
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/ci-cd_pipeline:latest
          
          # Pushing to Docker Hub
          docker push kal5257/ci-cd_pipeline:latest


      # Deploying to Google Kubernetes Engine (GKE)
      - name: Deploying to GKE
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}
          kubectl apply -f k8s/


       # Installing Heroku CLI
      - name: Installing Heroku CLI
        run: |
         curl https://cli-assets.heroku.com/install.sh | sh


       # Deploying to Heroku as a backup
      - name: Deploying to Heroku
        run: |
          echo ${{ secrets.HEROKU_API_KEY }} | docker login --username=_ --password-stdin registry.heroku.com
          docker tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/ci-cd_pipeline:latest registry.heroku.com/glacial-lowlands-50508/web
          docker push registry.heroku.com/glacial-lowlands-50508/web
          heroku container:release web -a glacial-lowlands-50508